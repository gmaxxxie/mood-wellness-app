name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Backend Lint & Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mood_ci
        options: >-
          --health-cmd "pg_isready -U postgres -d mood_ci" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/mood_ci?schema=public
      NODE_ENV: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: backend

      - name: Generate Prisma Client
        run: npx prisma generate
        working-directory: backend

      - name: Sync database schema
        run: npx prisma db push --skip-generate
        working-directory: backend

      - name: Run lint
        run: npm run lint
        working-directory: backend

      - name: Run tests
        run: npm test -- --runInBand
        working-directory: backend

  frontend:
    name: Frontend Lint, Type Check & Build
    runs-on: ubuntu-latest
    needs: backend
    env:
      CI: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: frontend

      - name: Run lint
        run: npm run lint
        working-directory: frontend

      - name: Type check
        run: npm run type-check
        working-directory: frontend

      - name: Build application
        run: npm run build
        working-directory: frontend

      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        working-directory: frontend

      - name: Run end-to-end tests
        run: npm run test:e2e -- --reporter=dot
        working-directory: frontend
